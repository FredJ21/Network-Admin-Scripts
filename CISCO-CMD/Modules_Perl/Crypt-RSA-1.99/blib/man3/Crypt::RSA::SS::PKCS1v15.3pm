.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Crypt::RSA::SS::PKCS1v15 3"
.TH Crypt::RSA::SS::PKCS1v15 3 "2009-06-07" "perl v5.20.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Crypt::RSA::SS::PKCS1v15 \- PKCS #1 v1.5 signatures.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&    my $pkcs = new Crypt::RSA::SS::PKCS1v15 ( 
\&                        Digest => \*(AqMD5\*(Aq
\&                    );
\&
\&    my $signature = $pkcs\->sign (
\&                        Message => $message,
\&                        Key     => $private, 
\&                    ) || die $pss\->errstr;
\&
\&    my $verify    = $pkcs\->verify (
\&                        Message   => $message, 
\&                        Key       => $key, 
\&                        Signature => $signature, 
\&                    ) || die $pss\->errstr;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module implements \s-1PKCS\s0 #1 v1.5 signatures based on \s-1RSA.\s0 See [13] 
for details on the scheme.
.SH "METHODS"
.IX Header "METHODS"
.SS "\fB\fP\f(BInew()\fP\fB\fP"
.IX Subsection "new()"
Constructor.   Takes a hash as argument with the following key:
.IP "\fBDigest\fR" 4
.IX Item "Digest"
Name of the Message Digest algorithm. Three Digest algorithms are
supported: \s-1MD2, MD5\s0 and \s-1SHA1.\s0 Digest defaults to \s-1SHA1.\s0
.SS "\fB\fP\f(BIversion()\fP\fB\fP"
.IX Subsection "version()"
Returns the version number of the module.
.SS "\fB\fP\f(BIsign()\fP\fB\fP"
.IX Subsection "sign()"
Computes a \s-1PKCS\s0 #1 v1.5 signature on a message with the private key of the
signer. \fIsign()\fR takes a hash argument with the following mandatory keys:
.IP "\fBMessage\fR" 4
.IX Item "Message"
Message to be signed, a string of arbitrary length.
.IP "\fBKey\fR" 4
.IX Item "Key"
Private key of the signer, a Crypt::RSA::Key::Private object.
.SS "\fB\fP\f(BIverify()\fP\fB\fP"
.IX Subsection "verify()"
Verifies a signature generated with \fIsign()\fR. Returns a true value on
success and false on failure. \f(CW$self\fR\->errstr is set to \*(L"Invalid signature.\*(R"
or appropriate error on failure. \fIverify()\fR takes a hash argument with the
following mandatory keys:
.IP "\fBKey\fR" 4
.IX Item "Key"
Public key of the signer, a Crypt::RSA::Key::Public object.
.IP "\fBMessage\fR" 4
.IX Item "Message"
The original signed message, a string of arbitrary length.
.IP "\fBSignature\fR" 4
.IX Item "Signature"
Signature computed with \fIsign()\fR, a string.
.SH "ERROR HANDLING"
.IX Header "ERROR HANDLING"
See \s-1ERROR HANDLING\s0 in \fICrypt::RSA\fR\|(3) manpage.
.SH "BIBLIOGRAPHY"
.IX Header "BIBLIOGRAPHY"
See \s-1BIBLIOGRAPHY\s0 in \fICrypt::RSA\fR\|(3) manpage.
.SH "AUTHOR"
.IX Header "AUTHOR"
Vipul Ved Prakash, <mail@vipul.net>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fICrypt::RSA\fR\|(3), \fICrypt::RSA::Primitives\fR\|(3), \fICrypt::RSA::Keys\fR\|(3),
\&\fICrypt::RSA::EME::OAEP\fR\|(3)

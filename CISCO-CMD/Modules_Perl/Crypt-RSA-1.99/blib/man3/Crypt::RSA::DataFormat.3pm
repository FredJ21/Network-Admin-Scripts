.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Crypt::RSA::DataFormat 3"
.TH Crypt::RSA::DataFormat 3 "2008-07-07" "perl v5.20.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Crypt::RSA::DataFormat \- Data creation, conversion and reporting primitives.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module implements several data creation, conversion and reporting
primitives used throughout the Crypt::RSA implementation. Primitives are
available as exportable functions.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.IP "\fBi2osp\fR Integer, Length" 4
.IX Item "i2osp Integer, Length"
Integer To Octet String Primitive. Converts an integer into its
equivalent octet string representation of length \fBLength\fR. If
necessary, the resulting string is prefixed with nulls. If
\&\fBLength\fR is not provided, returns an octet string of shortest
possible length.
.IP "\fBh2osp\fR Hex String" 4
.IX Item "h2osp Hex String"
Hex To Octet String Primitive. Converts a \fIhex string\fR into its
equivalent octet string representation and returns an octet
string of shortest possible length. The hex string is not
prefixed with \f(CW\*(C`0x\*(C'\fR, etc.
.IP "\fBos2ip\fR String" 4
.IX Item "os2ip String"
Octet String to Integer Primitive. Converts an octet string into its
equivalent integer representation.
.IP "\fBgenerate_random_octet\fR Length, Strength" 4
.IX Item "generate_random_octet Length, Strength"
Generates a random octet string of length \fBLength\fR. \fBStrength\fR specifies
the degree of randomness. See \fICrypt::Random\fR\|(3) for an explanation of the
\&\fBStrength\fR parameter.
.IP "\fBbitsize\fR Integer" 4
.IX Item "bitsize Integer"
Returns the length of the \fBInteger\fR in bits.
.IP "\fBoctet_len\fR Integer" 4
.IX Item "octet_len Integer"
Returns the octet length of the integer. If the length is not a whole
number, the fractional part is dropped to make it whole.
.IP "\fBoctet_xor\fR String1, String2" 4
.IX Item "octet_xor String1, String2"
Returns the result of \fBString1\fR \s-1XOR \s0\fBString2\fR.
.IP "\fBsteak\fR String, Length" 4
.IX Item "steak String, Length"
Returns an array of segments of length \fBLength\fR from \fBString\fR. The final
segment can be smaller than \fBLength\fR.
.SH "AUTHOR"
.IX Header "AUTHOR"
Vipul Ved Prakash, <mail@vipul.net>
